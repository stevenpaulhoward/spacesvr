/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useTrimeshCollision } from "spacesvr";

type GLTFResult = GLTF & {
  nodes: {
    exterior: THREE.Mesh;
    windows: THREE.Mesh;
    collider: THREE.Mesh;
  };
  materials: {
    ["exterior.mat"]: THREE.MeshBasicMaterial;
    ["windows.mat"]: THREE.MeshBasicMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/musehq-1649149341/musehq_24_exterior.glb.gz";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);

  const { nodes, materials } = useGLTF(FILE_URL) as GLTFResult;

  // const SCALE = 0.6;

  useTrimeshCollision(nodes.collider.geometry);

  const keys = Object.keys(materials);
  for (const key of keys) {
    // @ts-ignore
    (materials[key] as MeshBasicMaterial).metalness = 0.0;
  }

  return (
    <group ref={group} {...props} dispose={null}>
      <group scale={1}>
        <mesh
          name="entry"
          geometry={nodes.exterior.geometry}
          material={materials["exterior.mat"]}
        />
        <mesh
          name="windows"
          geometry={nodes.windows.geometry}
          material={materials["windows.mat"]}
        />
        {/*<mesh*/}
        {/*  name="collider"*/}
        {/*  geometry={nodes.collider.geometry}*/}
        {/*  material={nodes.collider.material}*/}
        {/*/>*/}
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
